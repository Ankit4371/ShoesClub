spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/shoesClub
spring.datasource.username=admin
spring.datasource.password=Admin@1234
spring.jpa.hibernate.ddl-auto=update

server.port=8081
spring.application.name=order-service

#Eureka Client Properties
eureka.client.serviceUrl.defaultZone=http://eureka:password@localhost:8761/eureka


#Actuator
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

#Resilience4j
resilience4j.circuitbreaker.instances.inventoryX.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.inventoryX.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.inventoryX.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.inventoryX.slidingWindowSize=5
resilience4j.circuitbreaker.instances.inventoryX.failureRateThreshold=50
resilience4j.circuitbreaker.instances.inventoryX.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.inventoryX.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.inventoryX.automaticTransitionFromOPenToHalfOpenEnabled=true


# Timeout for api call to inventory
resilience4j.timelimiter.instances.inventoryX.timeout-duration=3s

# Retry Properties
resilience4j.retry.instances.inventoryX.max-attempts=3
resilience4j.retry.instances.inventoryX.wait-duration=5s

#Zipkin
spring.zipkin.base-url=http://localhost:9411
spring.sleuth.sampler.probability=1.0


#Kafka
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.template.default-topic=notification.topic
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping=event:com.example.OrderService.event.OrderPlacedEvent